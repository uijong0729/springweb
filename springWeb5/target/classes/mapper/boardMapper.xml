<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 게시판 처리 SQL -->
<mapper namespace="global.sesoc.web5.dao.BoardMapper">

	<!-- 게시글 저장 -->
	<insert id="insertBoard" parameterType="Board">
		insert into board3 (
			boardnum
			, id
			, title
			, content
			<if test="originalfile != null and savedfile != null">
			, originalfile
			, savedfile
			</if>
		)
		values (
			board3_seq.nextval
			, #{id}
			, #{title}
			, #{content}
			<if test="originalfile != null and savedfile != null">
			, #{originalfile}
			, #{savedfile}
			</if>
		)
	</insert>
	
	<!-- 게시글 읽기 -->
	<select id="getBoard" parameterType="int" resultType="Board">
		select 
			boardnum
			, id
			, title
			, content
			, to_char(inputdate, 'YYYY-MM-DD HH24:MI:SS') inputdate
			, hits
			, originalfile
			, savedfile
		from 
			board3 
		where 
			boardnum = #{boardnum}
	</select>
	
	<!-- 조회수 1 증가 -->
	<update id="addHits" parameterType="int">
		update
			board3
		set
			hits = hits + 1
		where
			boardnum = #{boardnum}
	</update>

	<!-- 전체 글 개수 (검색 필터링 후) -->
	<select id="getTotal" parameterType="string" resultType="int">
		select 
			count(*)
		from 
			board3 
		<if test="_parameter != null">
		where 
			title like '%' || #{searchText} || '%'
		</if>
	</select>
	
	<!-- 현재 페이지 목록 (검색 필터링 후) -->
	<select id="listBoard" parameterType="string" resultType="Board">
		select 
			boardnum
			, id
			, title
			, to_char(inputdate, 'YYYY-MM-DD') inputdate
			, hits
		from 
			board3 
		<if test="_parameter != null">
		where 
			title like '%' || #{searchText} || '%'
		</if>
		order by boardnum desc
	</select>


	<!-- 글 삭제 -->
	<delete id="deleteBoard" parameterType="Board">
		delete
		from
			board3
		where
			boardnum = #{boardnum}
			and id = #{id}
	</delete>

	<!-- 글 수정 -->
	<update id="updateBoard" parameterType="Board">
		update
			board3
		set
			title = #{title}
			, content = #{content}
			<if test="originalfile != null and savedfile != null">
			, originalfile = #{originalfile}
			, savedfile = #{savedfile}
			</if>
		where
			boardnum = #{boardnum}
			and id = #{id}
	</update>

	<!-- 리플 저장 -->
	<insert id="insertReply" parameterType="Reply">
		insert into reply3 (
			replynum
			, boardnum
			, id
			, text
		)
		values (
			reply3_seq.nextval
			, #{boardnum}
			, #{id}
			, #{text}
		)
	</insert>
	
	<!-- 리플 삭제 -->
	<delete id="deleteReply" parameterType="Reply">
		delete
		from
			reply3
		where
			replynum = #{replynum}
			and id = #{id}
	</delete>
	
	<!-- 현재 글의 리플 목록 -->
	<select id="listReply" parameterType="int" resultType="Reply">
		select 
			replynum
			, boardnum
			, id
			, text
			, to_char(inputdate, 'YYYY-MM-DD') inputdate
		from 
			reply3 
		where
			boardnum = #{boardnum}
		order by replynum desc
	</select>

	<!-- 리플 수정 -->
	<update id="updateReply" parameterType="Reply">
		update
			reply3
		set
			text = #{text}
		where
			replynum = #{replynum}
			and id = #{id}
	</update>

</mapper>
